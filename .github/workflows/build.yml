name: 构建二进制文件
on: [push]
jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        env:
            PYTHONIOENCODING: utf-8
            # LC_ALL: zh_CN.UTF-8
            # NUITKA_CACHE_DIR: ${{ github.action_path }}/nuitka/cache
            NUITKA_CACHE_DIR: ./_temp/nuitka/cache
            # 默认安装到全局python环境
            UV_SYSTEM_PYTHON: 1
        steps:
            - name: 检出仓库代码
              uses: actions/checkout@v4
            - name: 安装 uv
              uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true
            - name: 设置 Python
              run: uv python install
            - name: 安装 pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest
                  run_install: false
            - name: 设置 Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest
                  cache: "pnpm"
                  cache-dependency-path: web/pnpm-lock.yaml
            - name: 安装Nuitka
              run: uv tool install nuitka
            - name: 安装后端依赖
              working-directory: client
              run: uv sync
            - name: 安装后端Linux特定依赖
              if: matrix.os == 'ubuntu-latest'
              working-directory: client
              run: |
                sudo apt update -y
                sudo apt install -y ccache
                uv add pywebview[pyside6]
            - name: 安装前端依赖
              working-directory: web
              run: pnpm install
            - name: 构建前端
              working-directory: web
              run: pnpm build
            - name: 缓存Nuitka缓存
              uses: actions/cache@v4
              with:
                  path: ${{ env.NUITKA_CACHE_DIR }}
                  key: ${{ runner.os }}-${{ runner.arch }}-nuitka-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-${{ runner.arch }}-nuitka-
                      ${{ runner.os }}-${{ runner.arch }}-
            
            - name: 构建二进制文件
              working-directory: client
              # run: uv run build.py
              run: nuitka --onefile app.py --include-data-dir=../web/dist=dist --output-dir=nuitka_dist --remove-output --assume-yes-for-downloads

            - name: 上传构建产物
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ runner.os }}-${{ runner.arch }}
                  path: |
                    client/nuitka_dist/
                  include-hidden-files: true
